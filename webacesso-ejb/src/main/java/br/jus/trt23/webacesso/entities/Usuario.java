//
// This file was generated by the JPA Modeler
//
package br.jus.trt23.webacesso.entities;

import br.jus.trt23.nucleo.entities.EntidadeGenerica;
import br.jus.trt23.webacesso.constants.Constantes;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import lombok.Getter;
import lombok.Setter;

@Entity
@Getter
@Setter
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public abstract class Usuario extends EntidadeGenerica<Long>{
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "id")
    @SequenceGenerator(
            schema = Constantes.SCHEMA, sequenceName = "usuario_seq", name = "id"
    )
    protected Long id;    
    
    private String login;
    private String nome;
    private String matricula;
    private String email;
    private LocalDate nascimentoData;
    private Boolean isGestor;
    

    @OneToMany(mappedBy = "usuario")
    private Set<RunAs> runAses;

    @ManyToOne
    private UsuarioTipo tipo;
    
    @ManyToOne
    private Lotacao lotacao;    

    @ManyToMany
    private Set<Flow> flows;

    @OneToMany(mappedBy = "delegado")
    private Set<Delegacao> delegacoesRecebidas;

    @ManyToMany
    private Set<Papel> papeis;

    @OneToMany(mappedBy = "usuario")
    private Set<UsuarioRecurso> recursos;

    @OneToMany(mappedBy = "delegante")
    private Set<Delegacao> delegacoesConcedidas;
   
    public Usuario() {
        delegacoesConcedidas = new HashSet();
        delegacoesRecebidas = new HashSet();
        runAses = new HashSet();
        papeis = new HashSet();
        flows = new HashSet();        
    }

    @Override
    public String getNomeNatural() {
        return "Usu√°rio";
    }
}
